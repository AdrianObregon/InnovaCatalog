// <auto-generated />
using InnovaCatalog.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InnovaCatalog.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230503221245_AgregarCatalogosBD")]
    partial class AgregarCatalogosBD
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InnovaCatalog.Models.CatalogBrand", b =>
                {
                    b.Property<int>("CatalogBrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatalogBrandId"));

                    b.Property<string>("CatalogBrandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatalogBrandId");

                    b.ToTable("CatalogBrands");
                });

            modelBuilder.Entity("InnovaCatalog.Models.CatalogItem", b =>
                {
                    b.Property<int>("CatalogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatalogId"));

                    b.Property<int>("AvailableStock")
                        .HasColumnType("int");

                    b.Property<int>("CatalogBrandId")
                        .HasColumnType("int");

                    b.Property<int>("CatalogTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxStockThreshold")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnReorder")
                        .HasColumnType("bit");

                    b.Property<string>("PictureFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(2,2)");

                    b.Property<int>("RestockThreshold")
                        .HasColumnType("int");

                    b.HasKey("CatalogId");

                    b.HasIndex("CatalogBrandId");

                    b.HasIndex("CatalogTypeId");

                    b.ToTable("CatalogItems");

                    b.HasData(
                        new
                        {
                            CatalogId = 1,
                            AvailableStock = 5,
                            CatalogBrandId = 1,
                            CatalogTypeId = 1,
                            Description = "Descripcion del ejemplo",
                            MaxStockThreshold = 10,
                            Name = "Ejemplo",
                            OnReorder = true,
                            PictureFileName = "Ejemplo.Jpeg",
                            PictureUri = "https://benitomango.blob.core.windows.net/mango/14.jpg",
                            Price = 99.99m,
                            RestockThreshold = 3
                        },
                        new
                        {
                            CatalogId = 2,
                            AvailableStock = 5,
                            CatalogBrandId = 1,
                            CatalogTypeId = 1,
                            Description = "Descripcion del ejemplo 2",
                            MaxStockThreshold = 10,
                            Name = "Ejemplo2",
                            OnReorder = true,
                            PictureFileName = "Ejemplo2.Jpeg",
                            PictureUri = "https://benitomango.blob.core.windows.net/mango/12.jpg",
                            Price = 99.99m,
                            RestockThreshold = 3
                        },
                        new
                        {
                            CatalogId = 3,
                            AvailableStock = 5,
                            CatalogBrandId = 1,
                            CatalogTypeId = 1,
                            Description = "Descripcion del ejemplo 3",
                            MaxStockThreshold = 10,
                            Name = "Ejemplo3",
                            OnReorder = true,
                            PictureFileName = "Ejemplo3.Jpeg",
                            PictureUri = "https://benitomango.blob.core.windows.net/mango/13.jpg",
                            Price = 99.99m,
                            RestockThreshold = 3
                        });
                });

            modelBuilder.Entity("InnovaCatalog.Models.CatalogType", b =>
                {
                    b.Property<int>("CatalogTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatalogTypeId"));

                    b.Property<string>("CatalogTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatalogTypeId");

                    b.ToTable("CatalogTypes");
                });

            modelBuilder.Entity("InnovaCatalog.Models.CatalogItem", b =>
                {
                    b.HasOne("InnovaCatalog.Models.CatalogBrand", "CatalogBrand")
                        .WithMany()
                        .HasForeignKey("CatalogBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InnovaCatalog.Models.CatalogType", "CatalogType")
                        .WithMany()
                        .HasForeignKey("CatalogTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CatalogBrand");

                    b.Navigation("CatalogType");
                });
#pragma warning restore 612, 618
        }
    }
}
